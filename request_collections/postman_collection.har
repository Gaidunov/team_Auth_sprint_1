{
	"log": {
		"version": "1.2",
		"creator": {
			"name": "Insomnia REST Client",
			"version": "insomnia.desktop.app:v2022.6.0"
		},
		"entries": [
			{
				"startedDateTime": "2022-10-27T17:00:24.969Z",
				"time": 158.059,
				"request": {
					"method": "POST",
					"url": "http://127.0.0.1:5000/api/v1/roles/add/admin",
					"httpVersion": "HTTP/1.1",
					"cookies": [
						{
							"name": "access_token_cookie",
							"value": "\"deleted access_token\"",
							"path": "/",
							"domain": "127.0.0.1",
							"httpOnly": true
						},
						{
							"name": "refresh_token_cookie",
							"value": "\"deleted  refresh_token\"",
							"path": "/",
							"domain": "127.0.0.1",
							"httpOnly": true
						}
					],
					"headers": [
						{
							"name": "Content-Type",
							"value": "application/json"
						}
					],
					"queryString": [],
					"postData": {
						"mimeType": "application/json",
						"text": "{\"role\":\"amdin\"}",
						"params": []
					},
					"headersSize": -1,
					"bodySize": -1,
					"settingEncodeUrl": true
				},
				"response": {
					"status": 500,
					"statusText": "INTERNAL SERVER ERROR",
					"httpVersion": "HTTP/1.1",
					"cookies": [],
					"headers": [
						{
							"name": "Server",
							"value": "Werkzeug/2.2.2 Python/3.10.6"
						},
						{
							"name": "Date",
							"value": "Thu, 27 Oct 2022 16:34:17 GMT"
						},
						{
							"name": "Content-Type",
							"value": "text/html; charset=utf-8"
						},
						{
							"name": "Content-Length",
							"value": "57514"
						},
						{
							"name": "Connection",
							"value": "close"
						}
					],
					"content": {
						"size": 57514,
						"mimeType": "text/html; charset=utf-8",
						"text": "<!doctype html>\n<html lang=en>\n  <head>\n    <title>sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: roles.id\n[SQL: INSERT INTO roles (id, name) VALUES (?, ?)]\n[parameters: ('292c25bc-5615-11ed-b003-00155d5c5872', 'admin')]\n(Background on this error at: https://sqlalche.me/e/14/gkpj)\n // Werkzeug Debugger</title>\n    <link rel=\"stylesheet\" href=\"?__debugger__=yes&amp;cmd=resource&amp;f=style.css\">\n    <link rel=\"shortcut icon\"\n        href=\"?__debugger__=yes&amp;cmd=resource&amp;f=console.png\">\n    <script src=\"?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js\"></script>\n    <script>\n      var CONSOLE_MODE = false,\n          EVALEX = true,\n          EVALEX_TRUSTED = false,\n          SECRET = \"YpHDQyodSY2iVcCpKpVa\";\n    </script>\n  </head>\n  <body style=\"background-color: #fff\">\n    <div class=\"debugger\">\n<h1>IntegrityError</h1>\n<div class=\"detail\">\n  <p class=\"errormsg\">sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: roles.id\n[SQL: INSERT INTO roles (id, name) VALUES (?, ?)]\n[parameters: (&#39;292c25bc-5615-11ed-b003-00155d5c5872&#39;, &#39;admin&#39;)]\n(Background on this error at: https://sqlalche.me/e/14/gkpj)\n</p>\n</div>\n<h2 class=\"traceback\">Traceback <em>(most recent call last)</em></h2>\n<div class=\"traceback\">\n  <h3></h3>\n  <ul><li><div class=\"frame\" id=\"frame-139854739890672\">\n  <h4>File <cite class=\"filename\">\"/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/sqlalchemy/engine/base.py\"</cite>,\n      line <em class=\"line\">1900</em>,\n      in <code class=\"function\">_execute_context</code></h4>\n  <div class=\"source library\"><pre class=\"line before\"><span class=\"ws\">                    </span>for fn in self.dialect.dispatch.do_execute:</pre>\n<pre class=\"line before\"><span class=\"ws\">                        </span>if fn(cursor, statement, parameters, context):</pre>\n<pre class=\"line before\"><span class=\"ws\">                            </span>evt_handled = True</pre>\n<pre class=\"line before\"><span class=\"ws\">                            </span>break</pre>\n<pre class=\"line before\"><span class=\"ws\">                </span>if not evt_handled:</pre>\n<pre class=\"line current\"><span class=\"ws\">                    </span>self.dialect.do_execute(</pre>\n<pre class=\"line after\"><span class=\"ws\">                        </span>cursor, statement, parameters, context</pre>\n<pre class=\"line after\"><span class=\"ws\">                    </span>)</pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>if self._has_events or self.engine._has_events:</pre>\n<pre class=\"line after\"><span class=\"ws\">                </span>self.dispatch.after_cursor_execute(</pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-139854739890784\">\n  <h4>File <cite class=\"filename\">\"/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/sqlalchemy/engine/default.py\"</cite>,\n      line <em class=\"line\">736</em>,\n      in <code class=\"function\">do_execute</code></h4>\n  <div class=\"source library\"><pre class=\"line before\"><span class=\"ws\"></span> </pre>\n<pre class=\"line before\"><span class=\"ws\">    </span>def do_executemany(self, cursor, statement, parameters, context=None):</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>cursor.executemany(statement, parameters)</pre>\n<pre class=\"line before\"><span class=\"ws\"></span> </pre>\n<pre class=\"line before\"><span class=\"ws\">    </span>def do_execute(self, cursor, statement, parameters, context=None):</pre>\n<pre class=\"line current\"><span class=\"ws\">        </span>cursor.execute(statement, parameters)</pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre>\n<pre class=\"line after\"><span class=\"ws\">    </span>def do_execute_no_params(self, cursor, statement, context=None):</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>cursor.execute(statement)</pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre>\n<pre class=\"line after\"><span class=\"ws\">    </span>def is_disconnect(self, e, connection, cursor):</pre></div>\n</div>\n\n<li><div class=\"exc-divider\">The above exception was the direct cause of the following exception:</div>\n<li><div class=\"frame\" id=\"frame-139854758371488\">\n  <h4>File <cite class=\"filename\">\"/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/flask/app.py\"</cite>,\n      line <em class=\"line\">2548</em>,\n      in <code class=\"function\">__call__</code></h4>\n  <div class=\"source library\"><pre class=\"line before\"><span class=\"ws\">    </span>def __call__(self, environ: dict, start_response: t.Callable) -&gt; t.Any:</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>wrapped to apply middleware.</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>&#34;&#34;&#34;</pre>\n<pre class=\"line current\"><span class=\"ws\">        </span>return self.wsgi_app(environ, start_response)</pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-139854740240112\">\n  <h4>File <cite class=\"filename\">\"/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/flask/app.py\"</cite>,\n      line <em class=\"line\">2528</em>,\n      in <code class=\"function\">wsgi_app</code></h4>\n  <div class=\"source library\"><pre class=\"line before\"><span class=\"ws\">            </span>try:</pre>\n<pre class=\"line before\"><span class=\"ws\">                </span>ctx.push()</pre>\n<pre class=\"line before\"><span class=\"ws\">                </span>response = self.full_dispatch_request()</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>except Exception as e:</pre>\n<pre class=\"line before\"><span class=\"ws\">                </span>error = e</pre>\n<pre class=\"line current\"><span class=\"ws\">                </span>response = self.handle_exception(e)</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>except:  # noqa: B001</pre>\n<pre class=\"line after\"><span class=\"ws\">                </span>error = sys.exc_info()[1]</pre>\n<pre class=\"line after\"><span class=\"ws\">                </span>raise</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>return response(environ, start_response)</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>finally:</pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-139854740240224\">\n  <h4>File <cite class=\"filename\">\"/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/flask/app.py\"</cite>,\n      line <em class=\"line\">2525</em>,\n      in <code class=\"function\">wsgi_app</code></h4>\n  <div class=\"source library\"><pre class=\"line before\"><span class=\"ws\">        </span>ctx = self.request_context(environ)</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>error: t.Optional[BaseException] = None</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>try:</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>try:</pre>\n<pre class=\"line before\"><span class=\"ws\">                </span>ctx.push()</pre>\n<pre class=\"line current\"><span class=\"ws\">                </span>response = self.full_dispatch_request()</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>except Exception as e:</pre>\n<pre class=\"line after\"><span class=\"ws\">                </span>error = e</pre>\n<pre class=\"line after\"><span class=\"ws\">                </span>response = self.handle_exception(e)</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>except:  # noqa: B001</pre>\n<pre class=\"line after\"><span class=\"ws\">                </span>error = sys.exc_info()[1]</pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-139854740240336\">\n  <h4>File <cite class=\"filename\">\"/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/flask/app.py\"</cite>,\n      line <em class=\"line\">1822</em>,\n      in <code class=\"function\">full_dispatch_request</code></h4>\n  <div class=\"source library\"><pre class=\"line before\"><span class=\"ws\">            </span>request_started.send(self)</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>rv = self.preprocess_request()</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>if rv is None:</pre>\n<pre class=\"line before\"><span class=\"ws\">                </span>rv = self.dispatch_request()</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>except Exception as e:</pre>\n<pre class=\"line current\"><span class=\"ws\">            </span>rv = self.handle_user_exception(e)</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>return self.finalize_request(rv)</pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre>\n<pre class=\"line after\"><span class=\"ws\">    </span>def finalize_request(</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>self,</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>rv: t.Union[ft.ResponseReturnValue, HTTPException],</pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-139854740240448\">\n  <h4>File <cite class=\"filename\">\"/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/flask/app.py\"</cite>,\n      line <em class=\"line\">1820</em>,\n      in <code class=\"function\">full_dispatch_request</code></h4>\n  <div class=\"source library\"><pre class=\"line before\"><span class=\"ws\"></span> </pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>try:</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>request_started.send(self)</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>rv = self.preprocess_request()</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>if rv is None:</pre>\n<pre class=\"line current\"><span class=\"ws\">                </span>rv = self.dispatch_request()</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>except Exception as e:</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>rv = self.handle_user_exception(e)</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>return self.finalize_request(rv)</pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre>\n<pre class=\"line after\"><span class=\"ws\">    </span>def finalize_request(</pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-139854740240560\">\n  <h4>File <cite class=\"filename\">\"/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/flask/app.py\"</cite>,\n      line <em class=\"line\">1796</em>,\n      in <code class=\"function\">dispatch_request</code></h4>\n  <div class=\"source library\"><pre class=\"line before\"><span class=\"ws\">            </span>and req.method == &#34;OPTIONS&#34;</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>):</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>return self.make_default_options_response()</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span># otherwise dispatch to the handler for that endpoint</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>view_args: t.Dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre>\n<pre class=\"line current\"><span class=\"ws\">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)</pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre>\n<pre class=\"line after\"><span class=\"ws\">    </span>def full_dispatch_request(self) -&gt; Response:</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>pre and postprocessing as well as HTTP exception catching and</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>error handling.</pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-139854740240672\">\n  <h4>File <cite class=\"filename\">\"/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/src/api/v1/roles.py\"</cite>,\n      line <em class=\"line\">23</em>,\n      in <code class=\"function\">get_user_roles</code></h4>\n  <div class=\"source \"><pre class=\"line before\"><span class=\"ws\"></span> </pre>\n<pre class=\"line before\"><span class=\"ws\"></span>routes = Blueprint(&#39;roles&#39;, __name__)</pre>\n<pre class=\"line before\"><span class=\"ws\"></span> </pre>\n<pre class=\"line before\"><span class=\"ws\"></span>@routes.post(&#39;add/&lt;string:role_name&gt;&#39;)</pre>\n<pre class=\"line before\"><span class=\"ws\"></span>def get_user_roles(role_name):</pre>\n<pre class=\"line current\"><span class=\"ws\">    </span>result = db_manager.roles.add_role(role_name)</pre>\n<pre class=\"line after\"><span class=\"ws\">    </span>return result</pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre>\n<pre class=\"line after\"><span class=\"ws\"></span># @routes.get(&#39;/&lt;string:uid&gt;&#39;)</pre>\n<pre class=\"line after\"><span class=\"ws\"></span># def get_user_roles(uid):</pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-139854740242016\">\n  <h4>File <cite class=\"filename\">\"/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/src/db/manager.py\"</cite>,\n      line <em class=\"line\">92</em>,\n      in <code class=\"function\">add_role</code></h4>\n  <div class=\"source \"><pre class=\"line before\"><span class=\"ws\">        </span>self.session = session</pre>\n<pre class=\"line before\"><span class=\"ws\"></span> </pre>\n<pre class=\"line before\"><span class=\"ws\">    </span>def add_role(self, role_name):</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>role = Role(name=role_name)</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>self.session.add(role)</pre>\n<pre class=\"line current\"><span class=\"ws\">        </span>self.session.commit()</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>return f&#39;{role_name} добавлена&#39;</pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre>\n<pre class=\"line after\"><span class=\"ws\">    </span>def get_user_roles(self, user_id:str)-&gt;list[str]|None:</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>user = self.get_user_by_id(user_id)</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>return user.roles</pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-139854740293440\">\n  <h4>File <cite class=\"filename\">\"&lt;string&gt;\"</cite>,\n      line <em class=\"line\">2</em>,\n      in <code class=\"function\">commit</code></h4>\n  <div class=\"source \"></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-139854740293552\">\n  <h4>File <cite class=\"filename\">\"/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/sqlalchemy/orm/session.py\"</cite>,\n      line <em class=\"line\">1451</em>,\n      in <code class=\"function\">commit</code></h4>\n  <div class=\"source library\"><pre class=\"line before\"><span class=\"ws\">        </span>&#34;&#34;&#34;</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>if self._transaction is None:</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>if not self._autobegin():</pre>\n<pre class=\"line before\"><span class=\"ws\">                </span>raise sa_exc.InvalidRequestError(&#34;No transaction is begun.&#34;)</pre>\n<pre class=\"line before\"><span class=\"ws\"></span> </pre>\n<pre class=\"line current\"><span class=\"ws\">        </span>self._transaction.commit(_to_root=self.future)</pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre>\n<pre class=\"line after\"><span class=\"ws\">    </span>def prepare(self):</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>&#34;&#34;&#34;Prepare the current transaction in progress for two phase commit.</pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>If no transaction is in progress, this method raises an</pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-139854740640976\">\n  <h4>File <cite class=\"filename\">\"/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/sqlalchemy/orm/session.py\"</cite>,\n      line <em class=\"line\">829</em>,\n      in <code class=\"function\">commit</code></h4>\n  <div class=\"source library\"><pre class=\"line before\"><span class=\"ws\">        </span>self._state = PREPARED</pre>\n<pre class=\"line before\"><span class=\"ws\"></span> </pre>\n<pre class=\"line before\"><span class=\"ws\">    </span>def commit(self, _to_root=False):</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>self._assert_active(prepared_ok=True)</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>if self._state is not PREPARED:</pre>\n<pre class=\"line current\"><span class=\"ws\">            </span>self._prepare_impl()</pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>if self._parent is None or self.nested:</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>for conn, trans, should_commit, autoclose in set(</pre>\n<pre class=\"line after\"><span class=\"ws\">                </span>self._connections.values()</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>):</pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-139854740641088\">\n  <h4>File <cite class=\"filename\">\"/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/sqlalchemy/orm/session.py\"</cite>,\n      line <em class=\"line\">808</em>,\n      in <code class=\"function\">_prepare_impl</code></h4>\n  <div class=\"source library\"><pre class=\"line before\"><span class=\"ws\"></span> </pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>if not self.session._flushing:</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>for _flush_guard in range(100):</pre>\n<pre class=\"line before\"><span class=\"ws\">                </span>if self.session._is_clean():</pre>\n<pre class=\"line before\"><span class=\"ws\">                    </span>break</pre>\n<pre class=\"line current\"><span class=\"ws\">                </span>self.session.flush()</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>else:</pre>\n<pre class=\"line after\"><span class=\"ws\">                </span>raise exc.FlushError(</pre>\n<pre class=\"line after\"><span class=\"ws\">                    </span>&#34;Over 100 subsequent flushes have occurred within &#34;</pre>\n<pre class=\"line after\"><span class=\"ws\">                    </span>&#34;session.commit() - is an after_flush() hook &#34;</pre>\n<pre class=\"line after\"><span class=\"ws\">                    </span>&#34;creating new objects?&#34;</pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-139854740641200\">\n  <h4>File <cite class=\"filename\">\"/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/sqlalchemy/orm/session.py\"</cite>,\n      line <em class=\"line\">3429</em>,\n      in <code class=\"function\">flush</code></h4>\n  <div class=\"source library\"><pre class=\"line before\"><span class=\"ws\"></span> </pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>if self._is_clean():</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>return</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>try:</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>self._flushing = True</pre>\n<pre class=\"line current\"><span class=\"ws\">            </span>self._flush(objects)</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>finally:</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>self._flushing = False</pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre>\n<pre class=\"line after\"><span class=\"ws\">    </span>def _flush_warning(self, method):</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>util.warn(</pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-139854740641312\">\n  <h4>File <cite class=\"filename\">\"/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/sqlalchemy/orm/session.py\"</cite>,\n      line <em class=\"line\">3568</em>,\n      in <code class=\"function\">_flush</code></h4>\n  <div class=\"source library\"><pre class=\"line before\"><span class=\"ws\">            </span>self.dispatch.after_flush_postexec(self, flush_context)</pre>\n<pre class=\"line before\"><span class=\"ws\"></span> </pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>transaction.commit()</pre>\n<pre class=\"line before\"><span class=\"ws\"></span> </pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>except:</pre>\n<pre class=\"line current\"><span class=\"ws\">            </span>with util.safe_reraise():</pre>\n<pre class=\"line after\"><span class=\"ws\">                </span>transaction.rollback(_capture_exception=True)</pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre>\n<pre class=\"line after\"><span class=\"ws\">    </span>def bulk_save_objects(</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>self,</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>objects,</pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-139854740641424\">\n  <h4>File <cite class=\"filename\">\"/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py\"</cite>,\n      line <em class=\"line\">70</em>,\n      in <code class=\"function\">__exit__</code></h4>\n  <div class=\"source library\"><pre class=\"line before\"><span class=\"ws\">        </span># see #2703 for notes</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>if type_ is None:</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>exc_type, exc_value, exc_tb = self._exc_info</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>self._exc_info = None  # remove potential circular references</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>if not self.warn_only:</pre>\n<pre class=\"line current\"><span class=\"ws\">                </span>compat.raise_(</pre>\n<pre class=\"line after\"><span class=\"ws\">                    </span>exc_value,</pre>\n<pre class=\"line after\"><span class=\"ws\">                    </span>with_traceback=exc_tb,</pre>\n<pre class=\"line after\"><span class=\"ws\">                </span>)</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>else:</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>if not compat.py3k and self._exc_info and self._exc_info[1]:</pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-139854740729840\">\n  <h4>File <cite class=\"filename\">\"/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/sqlalchemy/util/compat.py\"</cite>,\n      line <em class=\"line\">208</em>,\n      in <code class=\"function\">raise_</code></h4>\n  <div class=\"source library\"><pre class=\"line before\"><span class=\"ws\">            </span># intermediary exception does not change, but we can&#39;t figure</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span># that out.</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>exception.__cause__ = replace_context</pre>\n<pre class=\"line before\"><span class=\"ws\"></span> </pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>try:</pre>\n<pre class=\"line current\"><span class=\"ws\">            </span>raise exception</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>finally:</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span># credit to</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span># https://cosmicpercolator.com/2016/01/13/exception-leaks-in-python-2-and-3/</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span># as the __traceback__ object creates a cycle</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>del exception, replace_context, from_, with_traceback</pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-139854740835792\">\n  <h4>File <cite class=\"filename\">\"/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/sqlalchemy/orm/session.py\"</cite>,\n      line <em class=\"line\">3529</em>,\n      in <code class=\"function\">_flush</code></h4>\n  <div class=\"source library\"><pre class=\"line before\"><span class=\"ws\"></span> </pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>flush_context.transaction = transaction = self.begin(_subtrans=True)</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>try:</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>self._warn_on_events = True</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>try:</pre>\n<pre class=\"line current\"><span class=\"ws\">                </span>flush_context.execute()</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>finally:</pre>\n<pre class=\"line after\"><span class=\"ws\">                </span>self._warn_on_events = False</pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>self.dispatch.after_flush(self, flush_context)</pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-139854740835904\">\n  <h4>File <cite class=\"filename\">\"/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/sqlalchemy/orm/unitofwork.py\"</cite>,\n      line <em class=\"line\">456</em>,\n      in <code class=\"function\">execute</code></h4>\n  <div class=\"source library\"><pre class=\"line before\"><span class=\"ws\">                </span>while set_:</pre>\n<pre class=\"line before\"><span class=\"ws\">                    </span>n = set_.pop()</pre>\n<pre class=\"line before\"><span class=\"ws\">                    </span>n.execute_aggregate(self, set_)</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>else:</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>for rec in topological.sort(self.dependencies, postsort_actions):</pre>\n<pre class=\"line current\"><span class=\"ws\">                </span>rec.execute(self)</pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre>\n<pre class=\"line after\"><span class=\"ws\">    </span>def finalize_flush_changes(self):</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>&#34;&#34;&#34;Mark processed objects as clean / deleted after a successful</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>flush().</pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-139854740885168\">\n  <h4>File <cite class=\"filename\">\"/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/sqlalchemy/orm/unitofwork.py\"</cite>,\n      line <em class=\"line\">630</em>,\n      in <code class=\"function\">execute</code></h4>\n  <div class=\"source library\"><pre class=\"line before\"><span class=\"ws\">        </span>self.sort_key = (&#34;SaveUpdateAll&#34;, mapper._sort_key)</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>assert mapper is mapper.base_mapper</pre>\n<pre class=\"line before\"><span class=\"ws\"></span> </pre>\n<pre class=\"line before\"><span class=\"ws\">    </span>@util.preload_module(&#34;sqlalchemy.orm.persistence&#34;)</pre>\n<pre class=\"line before\"><span class=\"ws\">    </span>def execute(self, uow):</pre>\n<pre class=\"line current\"><span class=\"ws\">        </span>util.preloaded.orm_persistence.save_obj(</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>self.mapper,</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>uow.states_for_mapper_hierarchy(self.mapper, False, False),</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>uow,</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>)</pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-139854740885280\">\n  <h4>File <cite class=\"filename\">\"/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/sqlalchemy/orm/persistence.py\"</cite>,\n      line <em class=\"line\">245</em>,\n      in <code class=\"function\">save_obj</code></h4>\n  <div class=\"source library\"><pre class=\"line before\"><span class=\"ws\">            </span>mapper,</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>table,</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>update,</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>)</pre>\n<pre class=\"line before\"><span class=\"ws\"></span> </pre>\n<pre class=\"line current\"><span class=\"ws\">        </span>_emit_insert_statements(</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>base_mapper,</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>uowtransaction,</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>mapper,</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>table,</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>insert,</pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-139854741090064\">\n  <h4>File <cite class=\"filename\">\"/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/sqlalchemy/orm/persistence.py\"</cite>,\n      line <em class=\"line\">1238</em>,\n      in <code class=\"function\">_emit_insert_statements</code></h4>\n  <div class=\"source library\"><pre class=\"line before\"><span class=\"ws\">                            </span>statement.values(value_params),</pre>\n<pre class=\"line before\"><span class=\"ws\">                            </span>params,</pre>\n<pre class=\"line before\"><span class=\"ws\">                            </span>execution_options=execution_options,</pre>\n<pre class=\"line before\"><span class=\"ws\">                        </span>)</pre>\n<pre class=\"line before\"><span class=\"ws\">                    </span>else:</pre>\n<pre class=\"line current\"><span class=\"ws\">                        </span>result = connection._execute_20(</pre>\n<pre class=\"line after\"><span class=\"ws\">                            </span>statement,</pre>\n<pre class=\"line after\"><span class=\"ws\">                            </span>params,</pre>\n<pre class=\"line after\"><span class=\"ws\">                            </span>execution_options=execution_options,</pre>\n<pre class=\"line after\"><span class=\"ws\">                        </span>)</pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-139854741090176\">\n  <h4>File <cite class=\"filename\">\"/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/sqlalchemy/engine/base.py\"</cite>,\n      line <em class=\"line\">1705</em>,\n      in <code class=\"function\">_execute_20</code></h4>\n  <div class=\"source library\"><pre class=\"line before\"><span class=\"ws\">        </span>except AttributeError as err:</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>util.raise_(</pre>\n<pre class=\"line before\"><span class=\"ws\">                </span>exc.ObjectNotExecutableError(statement), replace_context=err</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>)</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>else:</pre>\n<pre class=\"line current\"><span class=\"ws\">            </span>return meth(self, args_10style, kwargs_10style, execution_options)</pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre>\n<pre class=\"line after\"><span class=\"ws\">    </span>def exec_driver_sql(</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>self, statement, parameters=None, execution_options=None</pre>\n<pre class=\"line after\"><span class=\"ws\">    </span>):</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>r&#34;&#34;&#34;Executes a SQL statement construct and returns a</pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-139854739318128\">\n  <h4>File <cite class=\"filename\">\"/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/sqlalchemy/sql/elements.py\"</cite>,\n      line <em class=\"line\">333</em>,\n      in <code class=\"function\">_execute_on_connection</code></h4>\n  <div class=\"source library\"><pre class=\"line before\"><span class=\"ws\"></span> </pre>\n<pre class=\"line before\"><span class=\"ws\">    </span>def _execute_on_connection(</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>self, connection, multiparams, params, execution_options, _force=False</pre>\n<pre class=\"line before\"><span class=\"ws\">    </span>):</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>if _force or self.supports_execution:</pre>\n<pre class=\"line current\"><span class=\"ws\">            </span>return connection._execute_clauseelement(</pre>\n<pre class=\"line after\"><span class=\"ws\">                </span>self, multiparams, params, execution_options</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>)</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>else:</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>raise exc.ObjectNotExecutableError(self)</pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-139854739740640\">\n  <h4>File <cite class=\"filename\">\"/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/sqlalchemy/engine/base.py\"</cite>,\n      line <em class=\"line\">1572</em>,\n      in <code class=\"function\">_execute_clauseelement</code></h4>\n  <div class=\"source library\"><pre class=\"line before\"><span class=\"ws\">            </span>column_keys=keys,</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>for_executemany=for_executemany,</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>schema_translate_map=schema_translate_map,</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>linting=self.dialect.compiler_linting | compiler.WARN_LINTING,</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>)</pre>\n<pre class=\"line current\"><span class=\"ws\">        </span>ret = self._execute_context(</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>dialect,</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>dialect.execution_ctx_cls._init_compiled,</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>compiled_sql,</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>distilled_params,</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>execution_options,</pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-139854739740752\">\n  <h4>File <cite class=\"filename\">\"/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/sqlalchemy/engine/base.py\"</cite>,\n      line <em class=\"line\">1943</em>,\n      in <code class=\"function\">_execute_context</code></h4>\n  <div class=\"source library\"><pre class=\"line before\"><span class=\"ws\">                    </span># CursorResult already exhausted rows / has no rows.</pre>\n<pre class=\"line before\"><span class=\"ws\">                    </span># close us now</pre>\n<pre class=\"line before\"><span class=\"ws\">                    </span>branched.close()</pre>\n<pre class=\"line before\"><span class=\"ws\"></span> </pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>except BaseException as e:</pre>\n<pre class=\"line current\"><span class=\"ws\">            </span>self._handle_dbapi_exception(</pre>\n<pre class=\"line after\"><span class=\"ws\">                </span>e, statement, parameters, cursor, context</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>)</pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>return result</pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-139854739740864\">\n  <h4>File <cite class=\"filename\">\"/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/sqlalchemy/engine/base.py\"</cite>,\n      line <em class=\"line\">2124</em>,\n      in <code class=\"function\">_handle_dbapi_exception</code></h4>\n  <div class=\"source library\"><pre class=\"line before\"><span class=\"ws\">                    </span>self._autorollback()</pre>\n<pre class=\"line before\"><span class=\"ws\"></span> </pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>if newraise:</pre>\n<pre class=\"line before\"><span class=\"ws\">                </span>util.raise_(newraise, with_traceback=exc_info[2], from_=e)</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>elif should_wrap:</pre>\n<pre class=\"line current\"><span class=\"ws\">                </span>util.raise_(</pre>\n<pre class=\"line after\"><span class=\"ws\">                    </span>sqlalchemy_exception, with_traceback=exc_info[2], from_=e</pre>\n<pre class=\"line after\"><span class=\"ws\">                </span>)</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>else:</pre>\n<pre class=\"line after\"><span class=\"ws\">                </span>util.raise_(exc_info[1], with_traceback=exc_info[2])</pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-139854739740976\">\n  <h4>File <cite class=\"filename\">\"/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/sqlalchemy/util/compat.py\"</cite>,\n      line <em class=\"line\">208</em>,\n      in <code class=\"function\">raise_</code></h4>\n  <div class=\"source library\"><pre class=\"line before\"><span class=\"ws\">            </span># intermediary exception does not change, but we can&#39;t figure</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span># that out.</pre>\n<pre class=\"line before\"><span class=\"ws\">            </span>exception.__cause__ = replace_context</pre>\n<pre class=\"line before\"><span class=\"ws\"></span> </pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>try:</pre>\n<pre class=\"line current\"><span class=\"ws\">            </span>raise exception</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>finally:</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span># credit to</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span># https://cosmicpercolator.com/2016/01/13/exception-leaks-in-python-2-and-3/</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span># as the __traceback__ object creates a cycle</pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>del exception, replace_context, from_, with_traceback</pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-139854739741088\">\n  <h4>File <cite class=\"filename\">\"/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/sqlalchemy/engine/base.py\"</cite>,\n      line <em class=\"line\">1900</em>,\n      in <code class=\"function\">_execute_context</code></h4>\n  <div class=\"source library\"><pre class=\"line before\"><span class=\"ws\">                    </span>for fn in self.dialect.dispatch.do_execute:</pre>\n<pre class=\"line before\"><span class=\"ws\">                        </span>if fn(cursor, statement, parameters, context):</pre>\n<pre class=\"line before\"><span class=\"ws\">                            </span>evt_handled = True</pre>\n<pre class=\"line before\"><span class=\"ws\">                            </span>break</pre>\n<pre class=\"line before\"><span class=\"ws\">                </span>if not evt_handled:</pre>\n<pre class=\"line current\"><span class=\"ws\">                    </span>self.dialect.do_execute(</pre>\n<pre class=\"line after\"><span class=\"ws\">                        </span>cursor, statement, parameters, context</pre>\n<pre class=\"line after\"><span class=\"ws\">                    </span>)</pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre>\n<pre class=\"line after\"><span class=\"ws\">            </span>if self._has_events or self.engine._has_events:</pre>\n<pre class=\"line after\"><span class=\"ws\">                </span>self.dispatch.after_cursor_execute(</pre></div>\n</div>\n\n<li><div class=\"frame\" id=\"frame-139854739741200\">\n  <h4>File <cite class=\"filename\">\"/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/sqlalchemy/engine/default.py\"</cite>,\n      line <em class=\"line\">736</em>,\n      in <code class=\"function\">do_execute</code></h4>\n  <div class=\"source library\"><pre class=\"line before\"><span class=\"ws\"></span> </pre>\n<pre class=\"line before\"><span class=\"ws\">    </span>def do_executemany(self, cursor, statement, parameters, context=None):</pre>\n<pre class=\"line before\"><span class=\"ws\">        </span>cursor.executemany(statement, parameters)</pre>\n<pre class=\"line before\"><span class=\"ws\"></span> </pre>\n<pre class=\"line before\"><span class=\"ws\">    </span>def do_execute(self, cursor, statement, parameters, context=None):</pre>\n<pre class=\"line current\"><span class=\"ws\">        </span>cursor.execute(statement, parameters)</pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre>\n<pre class=\"line after\"><span class=\"ws\">    </span>def do_execute_no_params(self, cursor, statement, context=None):</pre>\n<pre class=\"line after\"><span class=\"ws\">        </span>cursor.execute(statement)</pre>\n<pre class=\"line after\"><span class=\"ws\"></span> </pre>\n<pre class=\"line after\"><span class=\"ws\">    </span>def is_disconnect(self, e, connection, cursor):</pre></div>\n</div>\n</ul>\n  <blockquote>sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: roles.id\n[SQL: INSERT INTO roles (id, name) VALUES (?, ?)]\n[parameters: (&#39;292c25bc-5615-11ed-b003-00155d5c5872&#39;, &#39;admin&#39;)]\n(Background on this error at: https://sqlalche.me/e/14/gkpj)\n</blockquote>\n</div>\n\n<div class=\"plain\">\n    <p>\n      This is the Copy/Paste friendly version of the traceback.\n    </p>\n    <textarea cols=\"50\" rows=\"10\" name=\"code\" readonly>Traceback (most recent call last):\n  File &#34;/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/sqlalchemy/engine/base.py&#34;, line 1900, in _execute_context\n    self.dialect.do_execute(\n  File &#34;/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/sqlalchemy/engine/default.py&#34;, line 736, in do_execute\n    cursor.execute(statement, parameters)\nsqlite3.IntegrityError: UNIQUE constraint failed: roles.id\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File &#34;/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/flask/app.py&#34;, line 2548, in __call__\n    return self.wsgi_app(environ, start_response)\n  File &#34;/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/flask/app.py&#34;, line 2528, in wsgi_app\n    response = self.handle_exception(e)\n  File &#34;/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/flask/app.py&#34;, line 2525, in wsgi_app\n    response = self.full_dispatch_request()\n  File &#34;/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/flask/app.py&#34;, line 1822, in full_dispatch_request\n    rv = self.handle_user_exception(e)\n  File &#34;/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/flask/app.py&#34;, line 1820, in full_dispatch_request\n    rv = self.dispatch_request()\n  File &#34;/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/flask/app.py&#34;, line 1796, in dispatch_request\n    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)\n  File &#34;/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/src/api/v1/roles.py&#34;, line 23, in get_user_roles\n    result = db_manager.roles.add_role(role_name)\n  File &#34;/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/src/db/manager.py&#34;, line 92, in add_role\n    self.session.commit()\n  File &#34;&lt;string&gt;&#34;, line 2, in commit\n  File &#34;/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/sqlalchemy/orm/session.py&#34;, line 1451, in commit\n    self._transaction.commit(_to_root=self.future)\n  File &#34;/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/sqlalchemy/orm/session.py&#34;, line 829, in commit\n    self._prepare_impl()\n  File &#34;/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/sqlalchemy/orm/session.py&#34;, line 808, in _prepare_impl\n    self.session.flush()\n  File &#34;/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/sqlalchemy/orm/session.py&#34;, line 3429, in flush\n    self._flush(objects)\n  File &#34;/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/sqlalchemy/orm/session.py&#34;, line 3568, in _flush\n    with util.safe_reraise():\n  File &#34;/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py&#34;, line 70, in __exit__\n    compat.raise_(\n  File &#34;/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/sqlalchemy/util/compat.py&#34;, line 208, in raise_\n    raise exception\n  File &#34;/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/sqlalchemy/orm/session.py&#34;, line 3529, in _flush\n    flush_context.execute()\n  File &#34;/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/sqlalchemy/orm/unitofwork.py&#34;, line 456, in execute\n    rec.execute(self)\n  File &#34;/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/sqlalchemy/orm/unitofwork.py&#34;, line 630, in execute\n    util.preloaded.orm_persistence.save_obj(\n  File &#34;/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/sqlalchemy/orm/persistence.py&#34;, line 245, in save_obj\n    _emit_insert_statements(\n  File &#34;/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/sqlalchemy/orm/persistence.py&#34;, line 1238, in _emit_insert_statements\n    result = connection._execute_20(\n  File &#34;/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/sqlalchemy/engine/base.py&#34;, line 1705, in _execute_20\n    return meth(self, args_10style, kwargs_10style, execution_options)\n  File &#34;/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/sqlalchemy/sql/elements.py&#34;, line 333, in _execute_on_connection\n    return connection._execute_clauseelement(\n  File &#34;/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/sqlalchemy/engine/base.py&#34;, line 1572, in _execute_clauseelement\n    ret = self._execute_context(\n  File &#34;/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/sqlalchemy/engine/base.py&#34;, line 1943, in _execute_context\n    self._handle_dbapi_exception(\n  File &#34;/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/sqlalchemy/engine/base.py&#34;, line 2124, in _handle_dbapi_exception\n    util.raise_(\n  File &#34;/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/sqlalchemy/util/compat.py&#34;, line 208, in raise_\n    raise exception\n  File &#34;/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/sqlalchemy/engine/base.py&#34;, line 1900, in _execute_context\n    self.dialect.do_execute(\n  File &#34;/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/sqlalchemy/engine/default.py&#34;, line 736, in do_execute\n    cursor.execute(statement, parameters)\nsqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: roles.id\n[SQL: INSERT INTO roles (id, name) VALUES (?, ?)]\n[parameters: (&#39;292c25bc-5615-11ed-b003-00155d5c5872&#39;, &#39;admin&#39;)]\n(Background on this error at: https://sqlalche.me/e/14/gkpj)\n</textarea>\n</div>\n<div class=\"explanation\">\n  The debugger caught an exception in your WSGI application.  You can now\n  look at the traceback which led to the error.  <span class=\"nojavascript\">\n  If you enable JavaScript you can also use additional features such as code\n  execution (if the evalex feature is enabled), automatic pasting of the\n  exceptions and much more.</span>\n</div>\n      <div class=\"footer\">\n        Brought to you by <strong class=\"arthur\">DON'T PANIC</strong>, your\n        friendly Werkzeug powered traceback interpreter.\n      </div>\n    </div>\n\n    <div class=\"pin-prompt\">\n      <div class=\"inner\">\n        <h3>Console Locked</h3>\n        <p>\n          The console is locked and needs to be unlocked by entering the PIN.\n          You can find the PIN printed out on the standard output of your\n          shell that runs the server.\n        <form>\n          <p>PIN:\n            <input type=text name=pin size=14>\n            <input type=submit name=btn value=\"Confirm Pin\">\n        </form>\n      </div>\n    </div>\n  </body>\n</html>\n\n<!--\n\nTraceback (most recent call last):\n  File \"/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/sqlalchemy/engine/base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/sqlalchemy/engine/default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\nsqlite3.IntegrityError: UNIQUE constraint failed: roles.id\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/flask/app.py\", line 2548, in __call__\n    return self.wsgi_app(environ, start_response)\n  File \"/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/flask/app.py\", line 2528, in wsgi_app\n    response = self.handle_exception(e)\n  File \"/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/flask/app.py\", line 2525, in wsgi_app\n    response = self.full_dispatch_request()\n  File \"/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/flask/app.py\", line 1822, in full_dispatch_request\n    rv = self.handle_user_exception(e)\n  File \"/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/flask/app.py\", line 1820, in full_dispatch_request\n    rv = self.dispatch_request()\n  File \"/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/flask/app.py\", line 1796, in dispatch_request\n    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)\n  File \"/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/src/api/v1/roles.py\", line 23, in get_user_roles\n    result = db_manager.roles.add_role(role_name)\n  File \"/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/src/db/manager.py\", line 92, in add_role\n    self.session.commit()\n  File \"<string>\", line 2, in commit\n  File \"/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/sqlalchemy/orm/session.py\", line 1451, in commit\n    self._transaction.commit(_to_root=self.future)\n  File \"/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/sqlalchemy/orm/session.py\", line 829, in commit\n    self._prepare_impl()\n  File \"/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/sqlalchemy/orm/session.py\", line 808, in _prepare_impl\n    self.session.flush()\n  File \"/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/sqlalchemy/orm/session.py\", line 3429, in flush\n    self._flush(objects)\n  File \"/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/sqlalchemy/orm/session.py\", line 3568, in _flush\n    with util.safe_reraise():\n  File \"/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py\", line 70, in __exit__\n    compat.raise_(\n  File \"/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/sqlalchemy/util/compat.py\", line 208, in raise_\n    raise exception\n  File \"/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/sqlalchemy/orm/session.py\", line 3529, in _flush\n    flush_context.execute()\n  File \"/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/sqlalchemy/orm/unitofwork.py\", line 456, in execute\n    rec.execute(self)\n  File \"/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/sqlalchemy/orm/unitofwork.py\", line 630, in execute\n    util.preloaded.orm_persistence.save_obj(\n  File \"/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/sqlalchemy/orm/persistence.py\", line 245, in save_obj\n    _emit_insert_statements(\n  File \"/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/sqlalchemy/orm/persistence.py\", line 1238, in _emit_insert_statements\n    result = connection._execute_20(\n  File \"/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/sqlalchemy/engine/base.py\", line 1705, in _execute_20\n    return meth(self, args_10style, kwargs_10style, execution_options)\n  File \"/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/sqlalchemy/sql/elements.py\", line 333, in _execute_on_connection\n    return connection._execute_clauseelement(\n  File \"/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/sqlalchemy/engine/base.py\", line 1572, in _execute_clauseelement\n    ret = self._execute_context(\n  File \"/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/sqlalchemy/engine/base.py\", line 1943, in _execute_context\n    self._handle_dbapi_exception(\n  File \"/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/sqlalchemy/engine/base.py\", line 2124, in _handle_dbapi_exception\n    util.raise_(\n  File \"/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/sqlalchemy/util/compat.py\", line 208, in raise_\n    raise exception\n  File \"/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/sqlalchemy/engine/base.py\", line 1900, in _execute_context\n    self.dialect.do_execute(\n  File \"/mnt/c/Users/ironb/прогр/LEARN_PYTHON/YANDEX_PRAKTIKUM/team_Auth_sprint_1/lin_env/lib/python3.10/site-packages/sqlalchemy/engine/default.py\", line 736, in do_execute\n    cursor.execute(statement, parameters)\nsqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: roles.id\n[SQL: INSERT INTO roles (id, name) VALUES (?, ?)]\n[parameters: ('292c25bc-5615-11ed-b003-00155d5c5872', 'admin')]\n(Background on this error at: https://sqlalche.me/e/14/gkpj)\n\n\n-->\n"
					},
					"redirectURL": "",
					"headersSize": -1,
					"bodySize": -1
				},
				"cache": {},
				"timings": {
					"blocked": -1,
					"dns": -1,
					"connect": -1,
					"send": 0,
					"wait": 158.059,
					"receive": 0,
					"ssl": -1
				},
				"comment": "add role"
			},
			{
				"startedDateTime": "2022-10-27T17:00:24.969Z",
				"time": 7.803,
				"request": {
					"method": "POST",
					"url": "http://127.0.0.1:5000/api/v1/roles/add-to-user/",
					"httpVersion": "HTTP/1.1",
					"cookies": [
						{
							"name": "access_token_cookie",
							"value": "\"deleted access_token\"",
							"path": "/",
							"domain": "127.0.0.1",
							"httpOnly": true
						},
						{
							"name": "refresh_token_cookie",
							"value": "\"deleted  refresh_token\"",
							"path": "/",
							"domain": "127.0.0.1",
							"httpOnly": true
						}
					],
					"headers": [
						{
							"name": "Content-Type",
							"value": "application/json"
						}
					],
					"queryString": [],
					"postData": {
						"mimeType": "application/json",
						"text": "{\"role\":\"amdin\", \"user_id\":\"7f88be12-5614-11ed-a90e-00155d5c5872\"}",
						"params": []
					},
					"headersSize": -1,
					"bodySize": -1,
					"settingEncodeUrl": true
				},
				"response": {
					"status": 404,
					"statusText": "NOT FOUND",
					"httpVersion": "HTTP/1.1",
					"cookies": [],
					"headers": [
						{
							"name": "Server",
							"value": "Werkzeug/2.2.2 Python/3.10.6"
						},
						{
							"name": "Date",
							"value": "Thu, 27 Oct 2022 16:38:58 GMT"
						},
						{
							"name": "Content-Type",
							"value": "text/html; charset=utf-8"
						},
						{
							"name": "Content-Length",
							"value": "207"
						},
						{
							"name": "Connection",
							"value": "close"
						}
					],
					"content": {
						"size": 207,
						"mimeType": "text/html; charset=utf-8",
						"text": "<!doctype html>\n<html lang=en>\n<title>404 Not Found</title>\n<h1>Not Found</h1>\n<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>\n"
					},
					"redirectURL": "",
					"headersSize": -1,
					"bodySize": -1
				},
				"cache": {},
				"timings": {
					"blocked": -1,
					"dns": -1,
					"connect": -1,
					"send": 0,
					"wait": 7.803,
					"receive": 0,
					"ssl": -1
				},
				"comment": "add users a role"
			},
			{
				"startedDateTime": "2022-10-27T17:00:24.969Z",
				"time": 10.571,
				"request": {
					"method": "GET",
					"url": "http://127.0.0.1:5000/api/v1/users/kirill_2",
					"httpVersion": "HTTP/1.1",
					"cookies": [
						{
							"name": "access_token_cookie",
							"value": "\"deleted access_token\"",
							"path": "/",
							"domain": "127.0.0.1",
							"httpOnly": true
						},
						{
							"name": "refresh_token_cookie",
							"value": "\"deleted  refresh_token\"",
							"path": "/",
							"domain": "127.0.0.1",
							"httpOnly": true
						}
					],
					"headers": [],
					"queryString": [],
					"postData": {
						"mimeType": "",
						"text": "",
						"params": []
					},
					"headersSize": -1,
					"bodySize": -1,
					"settingEncodeUrl": true
				},
				"response": {
					"status": 200,
					"statusText": "OK",
					"httpVersion": "HTTP/1.1",
					"cookies": [],
					"headers": [
						{
							"name": "Server",
							"value": "Werkzeug/2.2.2 Python/3.10.2"
						},
						{
							"name": "Date",
							"value": "Tue, 25 Oct 2022 15:44:20 GMT"
						},
						{
							"name": "Content-Type",
							"value": "application/json"
						},
						{
							"name": "Content-Length",
							"value": "70"
						},
						{
							"name": "Connection",
							"value": "close"
						}
					],
					"content": {
						"size": 70,
						"mimeType": "application/json",
						"text": "{\"login\":\"kirill_2\",\"user_id\":\"57e3535e-5443-11ed-b867-48e7da58e1cf\"}\n"
					},
					"redirectURL": "",
					"headersSize": -1,
					"bodySize": -1
				},
				"cache": {},
				"timings": {
					"blocked": -1,
					"dns": -1,
					"connect": -1,
					"send": 0,
					"wait": 10.571,
					"receive": 0,
					"ssl": -1
				},
				"comment": "get user by login"
			},
			{
				"startedDateTime": "2022-10-27T17:00:24.969Z",
				"time": 200.599,
				"request": {
					"method": "POST",
					"url": "http://127.0.0.1:5000/api/v1/users/account/change_password",
					"httpVersion": "HTTP/1.1",
					"cookies": [
						{
							"name": "access_token_cookie",
							"value": "\"deleted access_token\"",
							"path": "/",
							"domain": "127.0.0.1",
							"httpOnly": true
						},
						{
							"name": "refresh_token_cookie",
							"value": "\"deleted  refresh_token\"",
							"path": "/",
							"domain": "127.0.0.1",
							"httpOnly": true
						}
					],
					"headers": [
						{
							"name": "Content-Type",
							"value": "application/json"
						}
					],
					"queryString": [],
					"postData": {
						"mimeType": "application/json",
						"text": "{\"login\":\"kirill_2\",\"pass\":\"password1\", \"new_pass\": \"password2\"}",
						"params": []
					},
					"headersSize": -1,
					"bodySize": -1,
					"settingEncodeUrl": true
				},
				"response": {
					"status": 200,
					"statusText": "OK",
					"httpVersion": "HTTP/1.1",
					"cookies": [
						{
							"name": "access_token_cookie",
							"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmcmVzaCI6ZmFsc2UsImlhdCI6MTY2NjcxMjI0NSwianRpIjoiZDZmNDk5MDQtNTZkYi00NDRkLWIwNTgtYzczNTg4NGNkMDA5IiwidHlwZSI6ImFjY2VzcyIsInN1YiI6eyJmcmVzaCI6ZmFsc2UsImlhdCI6MTY2NjcxMjIyOCwianRpIjoiYmU2Y2RiMTEtMzUwMi00MDQzLTljMWItZmZjZGUyNzFiZDk1IiwidHlwZSI6ImFjY2VzcyIsInN1YiI6eyJ1c2VyX2lkIjoiNTdlMzUzNWUtNTQ0My0xMWVkLWI4NjctNDhlN2RhNThlMWNmIiwidXNlcl9sb2dpbiI6ImtpcmlsbF8yIn0sIm5iZiI6MTY2NjcxMjIyOCwiZXhwIjoxNjY2NzE1ODI4fSwibmJmIjoxNjY2NzEyMjQ1LCJleHAiOjE2NjY3MTU4NDV9.GiEXcBxotER6TD_Dc_GqQKC-85zD1NQHI5wl9Zg414k",
							"path": "/",
							"httpOnly": true
						},
						{
							"name": "refresh_token_cookie",
							"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmcmVzaCI6ZmFsc2UsImlhdCI6MTY2NjcxMjI0NSwianRpIjoiZTNjMTVkZGItNTlkZC00OTRiLWIzNjUtMThjZWM2NDkyYjNmIiwidHlwZSI6InJlZnJlc2giLCJzdWIiOnsiZnJlc2giOmZhbHNlLCJpYXQiOjE2NjY3MTIyMjgsImp0aSI6ImJlNmNkYjExLTM1MDItNDA0My05YzFiLWZmY2RlMjcxYmQ5NSIsInR5cGUiOiJhY2Nlc3MiLCJzdWIiOnsidXNlcl9pZCI6IjU3ZTM1MzVlLTU0NDMtMTFlZC1iODY3LTQ4ZTdkYTU4ZTFjZiIsInVzZXJfbG9naW4iOiJraXJpbGxfMiJ9LCJuYmYiOjE2NjY3MTIyMjgsImV4cCI6MTY2NjcxNTgyOH0sIm5iZiI6MTY2NjcxMjI0NSwiZXhwIjoxNjY5MzA0MjQ1fQ.1DM5ptYCFOLjcBOi7ODWohQ2-T47TAnhe5bQ_sbQY2w",
							"path": "/",
							"httpOnly": true
						}
					],
					"headers": [
						{
							"name": "Server",
							"value": "Werkzeug/2.2.2 Python/3.10.2"
						},
						{
							"name": "Date",
							"value": "Tue, 25 Oct 2022 15:37:25 GMT"
						},
						{
							"name": "Content-Type",
							"value": "text/html; charset=utf-8"
						},
						{
							"name": "Content-Length",
							"value": "27"
						},
						{
							"name": "Set-Cookie",
							"value": "access_token_cookie=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmcmVzaCI6ZmFsc2UsImlhdCI6MTY2NjcxMjI0NSwianRpIjoiZDZmNDk5MDQtNTZkYi00NDRkLWIwNTgtYzczNTg4NGNkMDA5IiwidHlwZSI6ImFjY2VzcyIsInN1YiI6eyJmcmVzaCI6ZmFsc2UsImlhdCI6MTY2NjcxMjIyOCwianRpIjoiYmU2Y2RiMTEtMzUwMi00MDQzLTljMWItZmZjZGUyNzFiZDk1IiwidHlwZSI6ImFjY2VzcyIsInN1YiI6eyJ1c2VyX2lkIjoiNTdlMzUzNWUtNTQ0My0xMWVkLWI4NjctNDhlN2RhNThlMWNmIiwidXNlcl9sb2dpbiI6ImtpcmlsbF8yIn0sIm5iZiI6MTY2NjcxMjIyOCwiZXhwIjoxNjY2NzE1ODI4fSwibmJmIjoxNjY2NzEyMjQ1LCJleHAiOjE2NjY3MTU4NDV9.GiEXcBxotER6TD_Dc_GqQKC-85zD1NQHI5wl9Zg414k; HttpOnly; Path=/"
						},
						{
							"name": "Set-Cookie",
							"value": "refresh_token_cookie=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmcmVzaCI6ZmFsc2UsImlhdCI6MTY2NjcxMjI0NSwianRpIjoiZTNjMTVkZGItNTlkZC00OTRiLWIzNjUtMThjZWM2NDkyYjNmIiwidHlwZSI6InJlZnJlc2giLCJzdWIiOnsiZnJlc2giOmZhbHNlLCJpYXQiOjE2NjY3MTIyMjgsImp0aSI6ImJlNmNkYjExLTM1MDItNDA0My05YzFiLWZmY2RlMjcxYmQ5NSIsInR5cGUiOiJhY2Nlc3MiLCJzdWIiOnsidXNlcl9pZCI6IjU3ZTM1MzVlLTU0NDMtMTFlZC1iODY3LTQ4ZTdkYTU4ZTFjZiIsInVzZXJfbG9naW4iOiJraXJpbGxfMiJ9LCJuYmYiOjE2NjY3MTIyMjgsImV4cCI6MTY2NjcxNTgyOH0sIm5iZiI6MTY2NjcxMjI0NSwiZXhwIjoxNjY5MzA0MjQ1fQ.1DM5ptYCFOLjcBOi7ODWohQ2-T47TAnhe5bQ_sbQY2w; HttpOnly; Path=/"
						},
						{
							"name": "Connection",
							"value": "close"
						}
					],
					"content": {
						"size": 27,
						"mimeType": "text/html; charset=utf-8",
						"text": "сменили пароль"
					},
					"redirectURL": "",
					"headersSize": -1,
					"bodySize": -1
				},
				"cache": {},
				"timings": {
					"blocked": -1,
					"dns": -1,
					"connect": -1,
					"send": 0,
					"wait": 200.599,
					"receive": 0,
					"ssl": -1
				},
				"comment": "change pass"
			},
			{
				"startedDateTime": "2022-10-27T17:00:24.969Z",
				"time": 7.884,
				"request": {
					"method": "GET",
					"url": "http://127.0.0.1:5000/api/v1/users/account/logout",
					"httpVersion": "HTTP/1.1",
					"cookies": [
						{
							"name": "access_token_cookie",
							"value": "\"deleted access_token\"",
							"path": "/",
							"domain": "127.0.0.1",
							"httpOnly": true
						},
						{
							"name": "refresh_token_cookie",
							"value": "\"deleted  refresh_token\"",
							"path": "/",
							"domain": "127.0.0.1",
							"httpOnly": true
						}
					],
					"headers": [],
					"queryString": [],
					"postData": {
						"mimeType": "",
						"text": "",
						"params": []
					},
					"headersSize": -1,
					"bodySize": -1,
					"settingEncodeUrl": true
				},
				"response": {
					"status": 200,
					"statusText": "OK",
					"httpVersion": "HTTP/1.1",
					"cookies": [
						{
							"name": "access_token_cookie",
							"value": "\"deleted access_token\"",
							"path": "/",
							"httpOnly": true
						},
						{
							"name": "refresh_token_cookie",
							"value": "\"deleted  refresh_token\"",
							"path": "/",
							"httpOnly": true
						}
					],
					"headers": [
						{
							"name": "Server",
							"value": "Werkzeug/2.2.2 Python/3.10.6"
						},
						{
							"name": "Date",
							"value": "Thu, 27 Oct 2022 16:55:07 GMT"
						},
						{
							"name": "Content-Type",
							"value": "text/html; charset=utf-8"
						},
						{
							"name": "Content-Length",
							"value": "36"
						},
						{
							"name": "Set-Cookie",
							"value": "access_token_cookie=\"deleted access_token\"; HttpOnly; Path=/"
						},
						{
							"name": "Set-Cookie",
							"value": "refresh_token_cookie=\"deleted  refresh_token\"; HttpOnly; Path=/"
						},
						{
							"name": "Connection",
							"value": "close"
						}
					],
					"content": {
						"size": 36,
						"mimeType": "text/html; charset=utf-8",
						"text": "юзер kirill разлогинен"
					},
					"redirectURL": "",
					"headersSize": -1,
					"bodySize": -1
				},
				"cache": {},
				"timings": {
					"blocked": -1,
					"dns": -1,
					"connect": -1,
					"send": 0,
					"wait": 7.884,
					"receive": 0,
					"ssl": -1
				},
				"comment": "logout"
			},
			{
				"startedDateTime": "2022-10-27T17:00:24.969Z",
				"time": 6.648000000000001,
				"request": {
					"method": "GET",
					"url": "http://127.0.0.1:5000/api/v1/movies/protected",
					"httpVersion": "HTTP/1.1",
					"cookies": [
						{
							"name": "access_token_cookie",
							"value": "\"deleted access_token\"",
							"path": "/",
							"domain": "127.0.0.1",
							"httpOnly": true
						},
						{
							"name": "refresh_token_cookie",
							"value": "\"deleted  refresh_token\"",
							"path": "/",
							"domain": "127.0.0.1",
							"httpOnly": true
						}
					],
					"headers": [],
					"queryString": [],
					"postData": {
						"mimeType": "",
						"text": "",
						"params": []
					},
					"headersSize": -1,
					"bodySize": -1,
					"settingEncodeUrl": true
				},
				"response": {
					"status": 422,
					"statusText": "UNPROCESSABLE ENTITY",
					"httpVersion": "HTTP/1.1",
					"cookies": [],
					"headers": [
						{
							"name": "Server",
							"value": "Werkzeug/2.2.2 Python/3.10.6"
						},
						{
							"name": "Date",
							"value": "Thu, 27 Oct 2022 16:55:11 GMT"
						},
						{
							"name": "Content-Type",
							"value": "application/json"
						},
						{
							"name": "Content-Length",
							"value": "35"
						},
						{
							"name": "Connection",
							"value": "close"
						}
					],
					"content": {
						"size": 35,
						"mimeType": "application/json",
						"text": "{\n  \"msg\": \"Not enough segments\"\n}\n"
					},
					"redirectURL": "",
					"headersSize": -1,
					"bodySize": -1
				},
				"cache": {},
				"timings": {
					"blocked": -1,
					"dns": -1,
					"connect": -1,
					"send": 0,
					"wait": 6.648000000000001,
					"receive": 0,
					"ssl": -1
				},
				"comment": "protected_data"
			},
			{
				"startedDateTime": "2022-10-27T17:00:24.969Z",
				"time": 28.212,
				"request": {
					"method": "GET",
					"url": "http://127.0.0.1:5000/api/v1/movies/public",
					"httpVersion": "HTTP/1.1",
					"cookies": [
						{
							"name": "access_token_cookie",
							"value": "\"deleted access_token\"",
							"path": "/",
							"domain": "127.0.0.1",
							"httpOnly": true
						},
						{
							"name": "refresh_token_cookie",
							"value": "\"deleted  refresh_token\"",
							"path": "/",
							"domain": "127.0.0.1",
							"httpOnly": true
						}
					],
					"headers": [],
					"queryString": [],
					"postData": {
						"mimeType": "",
						"text": "",
						"params": []
					},
					"headersSize": -1,
					"bodySize": -1,
					"settingEncodeUrl": true
				},
				"response": {
					"status": 200,
					"statusText": "OK",
					"httpVersion": "HTTP/1.1",
					"cookies": [],
					"headers": [
						{
							"name": "Server",
							"value": "Werkzeug/2.2.2 Python/3.10.6"
						},
						{
							"name": "Date",
							"value": "Thu, 27 Oct 2022 13:57:01 GMT"
						},
						{
							"name": "Content-Type",
							"value": "text/html; charset=utf-8"
						},
						{
							"name": "Content-Length",
							"value": "11"
						},
						{
							"name": "Connection",
							"value": "close"
						}
					],
					"content": {
						"size": 11,
						"mimeType": "text/html; charset=utf-8",
						"text": "public data"
					},
					"redirectURL": "",
					"headersSize": -1,
					"bodySize": -1
				},
				"cache": {},
				"timings": {
					"blocked": -1,
					"dns": -1,
					"connect": -1,
					"send": 0,
					"wait": 28.212,
					"receive": 0,
					"ssl": -1
				},
				"comment": "public_data"
			},
			{
				"startedDateTime": "2022-10-27T17:00:24.969Z",
				"time": 32.553,
				"request": {
					"method": "POST",
					"url": "http://127.0.0.1:5000/api/v1/users/account/refresh_token",
					"httpVersion": "HTTP/1.1",
					"cookies": [
						{
							"name": "access_token_cookie",
							"value": "\"deleted access_token\"",
							"path": "/",
							"domain": "127.0.0.1",
							"httpOnly": true
						},
						{
							"name": "refresh_token_cookie",
							"value": "\"deleted  refresh_token\"",
							"path": "/",
							"domain": "127.0.0.1",
							"httpOnly": true
						}
					],
					"headers": [],
					"queryString": [],
					"postData": {
						"mimeType": "",
						"text": "",
						"params": []
					},
					"headersSize": -1,
					"bodySize": -1,
					"settingEncodeUrl": true
				},
				"response": {
					"status": 200,
					"statusText": "OK",
					"httpVersion": "HTTP/1.1",
					"cookies": [],
					"headers": [
						{
							"name": "Server",
							"value": "Werkzeug/2.2.2 Python/3.10.6"
						},
						{
							"name": "Date",
							"value": "Thu, 27 Oct 2022 13:57:34 GMT"
						},
						{
							"name": "Content-Type",
							"value": "application/json"
						},
						{
							"name": "Content-Length",
							"value": "384"
						},
						{
							"name": "Connection",
							"value": "close"
						}
					],
					"content": {
						"size": 384,
						"mimeType": "application/json",
						"text": "{\n  \"access_token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmcmVzaCI6ZmFsc2UsImlhdCI6MTY2Njg3OTA1NCwianRpIjoiZGVjMWE0N2YtODgyNS00MjQwLWIxNGYtMGU3M2JjMWVmOWYxIiwidHlwZSI6ImFjY2VzcyIsInN1YiI6eyJ1c2VyX2lkIjoiNTdlMzUzNWUtNTQ0My0xMWVkLWI4NjctNDhlN2RhNThlMWNmIiwidXNlcl9sb2dpbiI6ImtpcmlsbF8yIn0sIm5iZiI6MTY2Njg3OTA1NCwiZXhwIjoxNjY2ODgyNjU0fQ.NPTWKw8Qz-NnfUxv9dtIWtCHZt0zwzTXkRRudFXH0XE\"\n}\n"
					},
					"redirectURL": "",
					"headersSize": -1,
					"bodySize": -1
				},
				"cache": {},
				"timings": {
					"blocked": -1,
					"dns": -1,
					"connect": -1,
					"send": 0,
					"wait": 32.553,
					"receive": 0,
					"ssl": -1
				},
				"comment": "refresh token"
			},
			{
				"startedDateTime": "2022-10-27T17:00:24.969Z",
				"time": 117.74600000000001,
				"request": {
					"method": "POST",
					"url": "http://127.0.0.1:5000/api/v1/users/account/login",
					"httpVersion": "HTTP/1.1",
					"cookies": [
						{
							"name": "access_token_cookie",
							"value": "\"deleted access_token\"",
							"path": "/",
							"domain": "127.0.0.1",
							"httpOnly": true
						},
						{
							"name": "refresh_token_cookie",
							"value": "\"deleted  refresh_token\"",
							"path": "/",
							"domain": "127.0.0.1",
							"httpOnly": true
						}
					],
					"headers": [
						{
							"name": "Content-Type",
							"value": "application/json"
						}
					],
					"queryString": [],
					"postData": {
						"mimeType": "application/json",
						"text": "{\"login\":\"kirill\",\"pass\":\"password\"}",
						"params": []
					},
					"headersSize": -1,
					"bodySize": -1,
					"settingEncodeUrl": true
				},
				"response": {
					"status": 200,
					"statusText": "OK",
					"httpVersion": "HTTP/1.1",
					"cookies": [
						{
							"name": "access_token_cookie",
							"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmcmVzaCI6ZmFsc2UsImlhdCI6MTY2Njg4OTcwMywianRpIjoiMzhiZmFiNzItZjM4Ny00ZmQ4LTlkMDgtOTk2NzE3MDJhZjNlIiwidHlwZSI6ImFjY2VzcyIsInN1YiI6eyJ1c2VyX2lkIjoiN2Y4OGJlMTItNTYxNC0xMWVkLWE5MGUtMDAxNTVkNWM1ODcyIiwidXNlcl9sb2dpbiI6ImtpcmlsbCJ9LCJuYmYiOjE2NjY4ODk3MDMsImV4cCI6MTY2Njg5MzMwM30.t_Zx7lncx9-KCE5xyvkNUlE9QhQlHgCJxUqvvD2QoBc",
							"path": "/",
							"httpOnly": true
						},
						{
							"name": "refresh_token_cookie",
							"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmcmVzaCI6ZmFsc2UsImlhdCI6MTY2Njg4OTcwMywianRpIjoiMWYzOWY0N2QtOTI2Mi00NDRhLThhMjgtOWIwOTE5NDY5OWQxIiwidHlwZSI6InJlZnJlc2giLCJzdWIiOnsidXNlcl9pZCI6IjdmODhiZTEyLTU2MTQtMTFlZC1hOTBlLTAwMTU1ZDVjNTg3MiIsInVzZXJfbG9naW4iOiJraXJpbGwifSwibmJmIjoxNjY2ODg5NzAzLCJleHAiOjE2Njk0ODE3MDN9.ptbUnl0rdeEqHid0Q1zY4Q78SwfdeWJJvEQ5Zsp-OZU",
							"path": "/",
							"httpOnly": true
						}
					],
					"headers": [
						{
							"name": "Server",
							"value": "Werkzeug/2.2.2 Python/3.10.6"
						},
						{
							"name": "Date",
							"value": "Thu, 27 Oct 2022 16:55:03 GMT"
						},
						{
							"name": "Content-Type",
							"value": "text/html; charset=utf-8"
						},
						{
							"name": "Content-Length",
							"value": "34"
						},
						{
							"name": "Set-Cookie",
							"value": "access_token_cookie=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmcmVzaCI6ZmFsc2UsImlhdCI6MTY2Njg4OTcwMywianRpIjoiMzhiZmFiNzItZjM4Ny00ZmQ4LTlkMDgtOTk2NzE3MDJhZjNlIiwidHlwZSI6ImFjY2VzcyIsInN1YiI6eyJ1c2VyX2lkIjoiN2Y4OGJlMTItNTYxNC0xMWVkLWE5MGUtMDAxNTVkNWM1ODcyIiwidXNlcl9sb2dpbiI6ImtpcmlsbCJ9LCJuYmYiOjE2NjY4ODk3MDMsImV4cCI6MTY2Njg5MzMwM30.t_Zx7lncx9-KCE5xyvkNUlE9QhQlHgCJxUqvvD2QoBc; HttpOnly; Path=/"
						},
						{
							"name": "Set-Cookie",
							"value": "refresh_token_cookie=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmcmVzaCI6ZmFsc2UsImlhdCI6MTY2Njg4OTcwMywianRpIjoiMWYzOWY0N2QtOTI2Mi00NDRhLThhMjgtOWIwOTE5NDY5OWQxIiwidHlwZSI6InJlZnJlc2giLCJzdWIiOnsidXNlcl9pZCI6IjdmODhiZTEyLTU2MTQtMTFlZC1hOTBlLTAwMTU1ZDVjNTg3MiIsInVzZXJfbG9naW4iOiJraXJpbGwifSwibmJmIjoxNjY2ODg5NzAzLCJleHAiOjE2Njk0ODE3MDN9.ptbUnl0rdeEqHid0Q1zY4Q78SwfdeWJJvEQ5Zsp-OZU; HttpOnly; Path=/"
						},
						{
							"name": "Connection",
							"value": "close"
						}
					],
					"content": {
						"size": 34,
						"mimeType": "text/html; charset=utf-8",
						"text": "юзер kirill залогинен"
					},
					"redirectURL": "",
					"headersSize": -1,
					"bodySize": -1
				},
				"cache": {},
				"timings": {
					"blocked": -1,
					"dns": -1,
					"connect": -1,
					"send": 0,
					"wait": 117.74600000000001,
					"receive": 0,
					"ssl": -1
				},
				"comment": "login"
			},
			{
				"startedDateTime": "2022-10-27T17:00:24.969Z",
				"time": 104.21,
				"request": {
					"method": "POST",
					"url": "http://127.0.0.1:5000/api/v1/users/account/register",
					"httpVersion": "HTTP/1.1",
					"cookies": [
						{
							"name": "access_token_cookie",
							"value": "\"deleted access_token\"",
							"path": "/",
							"domain": "127.0.0.1",
							"httpOnly": true
						},
						{
							"name": "refresh_token_cookie",
							"value": "\"deleted  refresh_token\"",
							"path": "/",
							"domain": "127.0.0.1",
							"httpOnly": true
						}
					],
					"headers": [
						{
							"name": "Content-Type",
							"value": "application/json"
						},
						{
							"name": "Authorization",
							"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzb21lIjoicGF5bG9hZCJ9.4twFt5NiznN84AWoo1d7KO1T_yoc0Z6XOpOVswacPZg"
						}
					],
					"queryString": [],
					"postData": {
						"mimeType": "application/json",
						"text": "{\"login\":\"kirill\",\"pass\":\"password\"}",
						"params": []
					},
					"headersSize": -1,
					"bodySize": -1,
					"settingEncodeUrl": true
				},
				"response": {
					"status": 201,
					"statusText": "CREATED",
					"httpVersion": "HTTP/1.1",
					"cookies": [],
					"headers": [
						{
							"name": "Server",
							"value": "Werkzeug/2.2.2 Python/3.10.6"
						},
						{
							"name": "Date",
							"value": "Thu, 27 Oct 2022 16:29:25 GMT"
						},
						{
							"name": "Content-Type",
							"value": "text/html; charset=utf-8"
						},
						{
							"name": "Content-Length",
							"value": "32"
						},
						{
							"name": "Connection",
							"value": "close"
						}
					],
					"content": {
						"size": 32,
						"mimeType": "text/html; charset=utf-8",
						"text": "юзер kirill добавлен"
					},
					"redirectURL": "",
					"headersSize": -1,
					"bodySize": -1
				},
				"cache": {},
				"timings": {
					"blocked": -1,
					"dns": -1,
					"connect": -1,
					"send": 0,
					"wait": 104.21,
					"receive": 0,
					"ssl": -1
				},
				"comment": "register"
			}
		]
	}
}